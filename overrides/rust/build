#!/bin/sh -e

for patch in *.patch; do
    patch -p1 < "$patch"
done

# Patch some vendored files.
for vendor in libc openssl-sys; do
    sed -i 's/\("files":{\)[^}]*/\1/' "vendor/$vendor/.cargo-checksum.json"
done

# Determine arch
case $(cc -dumpmachine) in
   aarch64-unknown-linux-musl) export ARCH="aarch64";;
   x86_64-pc-linux-musl) export ARCH="x86_64";;
   powerpc64le-unknown-linux-musl) export ARCH="powerpc64le";;
   *) echo "Unsupported platform."; exit 1;;
esac

# Only add clang builtins if target is aarch64
if [ $ARCH == "aarch64" ]
then
    echo "Applying aarch64 fix"
    sed -i 's/\/\/armfix/#[link(name = "clang_rt.builtins-aarch64", kind = "static")]/' library/unwind/src/lib.rs
fi

echo "Building target: $ARCH"

cat > config.toml <<EOF
[llvm]
link-shared = true
use-libcxx  = true

[build]
build          =   "$ARCH-unknown-linux-musl"
host           = [ "$ARCH-unknown-linux-musl" ]
target         = [ "$ARCH-unknown-linux-musl" ]
docs           = false
compiler-docs  = false
extended       = true
tools          = ["cargo"]
submodules     = false
python         = "python3"
locked-deps    = true
vendor         = true
sanitizers     = false
profiler       = false
full-bootstrap = false
rustc          = "$PWD/$ARCH/bin/rustc"
cargo          = "$PWD/$ARCH/bin/cargo"

[install]
prefix = "/usr"

[rust]
channel           = "stable"
rpath             = true
codegen-units     = 2
codegen-units-std = 2
debuginfo-level   = 0
debug             = false
backtrace         = false
jemalloc          = false
debug-assertions  = false
codegen-tests     = false

[target.$ARCH-unknown-linux-musl]
llvm-config = "/usr/bin/llvm-config"
crt-static  = false
EOF

python3 ./x.py build -j "$(($(nproc)-1))"
DESTDIR="$1" python3 ./x.py install
