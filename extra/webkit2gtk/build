#!/bin/sh -e

# Optional dependencies
if [ -d $KISS_ROOT/var/db/kiss/installed/gst-plugins-base ]; then streaming=ON; fi
if [ -d $KISS_ROOT/var/db/kiss/installed/openjpeg2 ];        then jpeg=ON; fi
if [ -d $KISS_ROOT/var/db/kiss/installed/libtasn ];          then tasn=ON; fi

patch -p1 < fix-musl.patch

# Determine platform properties
case $(cat $KISS_ROOT/etc/os-arch) in
   aarch64) jit=ON armoption="-DWTF_CPU_ARM64_CORTEXA53=OFF" ;;
   x86_64) jit=ON;;
   powerpc64le) ;;
   powerpc64) ;;
   *) echo "Unsupported platform."; exit 1;;
esac


# Remove gettext requirement.
sed -i 's/ngettext/printf/g' Tools/MiniBrowser/gtk/BrowserDownloadsBar.c
sed -i '/po_files \*\.po/d'  Source/WebCore/platform/gtk/po/CMakeLists.txt
sed -i '/^GETTEXT_C/d'       Source/WebCore/platform/gtk/po/CMakeLists.txt

# Fix clang build.
sed -i '/LC_ALL/d'       Source/JavaScriptCore/jsc.cpp
sed -i '/WTFLogAlways/d' Source/JavaScriptCore/jsc.cpp

# Fix icu 68_1.
printf 'add_compile_definitions("U_DEFINE_FALSE_AND_TRUE=1")\n' \
    >> Source/WTF/wtf/CMakeLists.txt

export DESTDIR="$1"

mkdir build
cd build

kiss-cmake-config > cmake.config

#  -DWTF_CPU_ARM64_CORTEXA53=OFF \

cmake -GNinja \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_TOOLCHAIN_FILE="$(realpath cmake.config)" \
    -DCMAKE_BUILD_TYPE="MinSizeRel" \
    -DCMAKE_C_FLAGS="$CFLAGS" \
    -DCMAKE_CXX_FLAGS="$CXXFLAGS -lc++abi -lc++ " \
    -DCMAKE_SKIP_RPATH=ON \
    -DENABLE_BUBBLEWRAP_SANDBOX=OFF \
    -DENABLE_GEOLOCATION=OFF \
    -DENABLE_GLES2=ON \
    -DENABLE_GTKDOC=OFF \
    -DENABLE_INTL=OFF \
    -DENABLE_INTROSPECTION=OFF \
    -DENABLE_JIT=${jit:-OFF} \
    -DENABLE_MEDIASOURCE=${streaming:-OFF} \
    -DENABLE_MINIBROWSER=OFF \
    -DENABLE_OPENGL=ON \
    -DENABLE_SAMPLING_PROFILER=OFF \
    -DENABLE_SPELLCHECK=OFF \
    -DENABLE_VIDEO=${streaming:-OFF} \
    -DENABLE_WEBGL=OFF \
    -DENABLE_WEB_AUDIO=${streaming:-OFF} \
    -DENABLE_WEB_CRYPTO=${tasn:-OFF} \
    -DLIB_INSTALL_DIR=/usr/lib \
    -DPORT=GTK \
    -DUSE_LD_GOLD=OFF \
    -DUSE_LIBHYPHEN=OFF \
    -DUSE_LIBNOTIFY=OFF \
    -DUSE_LIBSECRET=OFF \
    -DUSE_OPENJPEG=${jpeg:-OFF} \
    -DUSE_SYSTEMD=OFF \
    -DUSE_SYSTEMD=OFF \
    -DUSE_WOFF2=OFF \
    -DUSE_WPE_RENDERER=OFF \
    -Wno-dev \
    $armoption \
    ..

ninja JavaScriptCore
ninja
ninja install
