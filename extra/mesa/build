#!/bin/sh -e

for patch in *.patch; do
    patch -p1 < "$patch"
done

# Install python-mako which is solely needed for mesa
# and thus contained in this build.
{
    cd mako

    python3 setup.py build
    python3 setup.py install \
        --prefix=/usr \
        --root="$PWD/dist"

    # Use a glob to avoid having to figure out the Python
    # version for the path below.
    cd dist/usr/lib/python*/site-packages

    # Set the PYTHONPATH so python knows where to find mako.
    # The one liner simply appends the existing path and
    # handles the case where an unset PYTHONPATH breaks
    # python as it will only contain our new addition.
    PYTHONPATH=$PWD:$(python -c "import sys; print(':'.join(sys.path))")

    cd -; cd ..
}

export PYTHONPATH
export DESTDIR="$1"
export CFLAGS="$CFLAGS -DGLX_X86_READONLY_TEXT -Wno-implicit-fallthrough "

# Fix issues with musl and firefox.
# https://bugs.freedesktop.org/show_bug.cgi?id=35268
# https://github.com/mesa3d/mesa/commit/9f37c9903b87f86a533bfaffa72f0ecb285b02b2
sed -i "/pre_args += '-DUSE_ELF_TLS'/d" meson.build

# Fix build:
sed -i 's/STN_UNDEF/SHN_UNDEF/g' src/amd/common/ac_rtld.c

case $(cat $KISS_ROOT/etc/os-arch) in
   aarch64)     DRI=-Ddri-drivers= GALL=-Dgallium-drivers=panfrost,kmsro,lima,v3d,vc4   VULK=-Dvulkan-drivers=;;
   x86_64) ;;
   powerpc64*) DRI=-Ddri-drivers= GALL=-Dgallium-drivers=radeonsi,r300,r600  VULK=-Dvulkan-drivers=;;
   *) echo "Unsupported platform: $(cc -dumpmachine)"; exit;;
esac

kiss-meson-config > meson.config

meson \
    --prefix=/usr \
    --cross-file="meson.config" \
    --sysconfdir=/etc \
    --libdir=/usr/lib \
    --mandir=/usr/share/man \
    --localstatedir=/var \
    --buildtype=release \
    -Ddri-drivers-path=/usr/lib/dri \
    -Dplatforms=x11 \
    -Dglx=dri \
    -Ddri3=enabled \
    -Dopengl=true \
    -Dgles1=disabled \
    -Dgles2=enabled \
    -Dshared-glapi=enabled \
    -Degl=enabled \
    $DRI \
    $GALL \
    $VULK \
    -Dllvm=enabled \
    . output

# Why does meson ignore sysroot etc?
# Thanks to Void for this:
find -iname "*.ninja" -exec sed -i "{}" \
    -e "s; /usr/lib/; ${KISS_ROOT}/usr/lib/;g" \
    -e "s;-L/usr/lib;-L${KISS_ROOT}/usr/lib;g" \
    -e "s;-I/usr/include;-I${KISS_ROOT}/usr/include;g" \
    \;


ninja -C output
ninja -C output install
